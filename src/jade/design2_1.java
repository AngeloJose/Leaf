/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jade;

/**
 *
 * @author xxxibkdragon~
 */import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class design2_1 extends javax.swing.JFrame {

    /**
     * Creates new form design2
     */String Name="";
    String output="";
    String key;
    int value;
    String strLine = null,errorstr="";
    Map<String, Integer> variables = new HashMap<>();
    Map<String, String> strvariable = new HashMap<>();
    Map<String, Double> floatvariable = new HashMap<>();
    int error=0,linenumber=0;
    List<Integer> errorline = new ArrayList<>();
    public design2_1() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel4 = new javax.swing.JPanel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Code = new javax.swing.JTextArea();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        New = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        Open = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        Save = new javax.swing.JMenuItem();
        SaveAs = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        Print = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        Run = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem15 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel3.setBackground(new java.awt.Color(234, 229, 229));

        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/createna.png"))); // NOI18N
        jToggleButton1.setText("Create");
        jToggleButton1.setToolTipText("Create New");
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.setIconTextGap(0);
        jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseDragged(evt);
            }
        });
        jToolBar1.add(jToggleButton1);

        jToggleButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/openna.png"))); // NOI18N
        jToggleButton3.setText("Open");
        jToggleButton3.setToolTipText("Open file");
        jToggleButton3.setFocusable(false);
        jToggleButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton3.setIconTextGap(0);
        jToggleButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton3);

        jToggleButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/exec.png"))); // NOI18N
        jToggleButton2.setText("Execute");
        jToggleButton2.setToolTipText("Run program");
        jToggleButton2.setFocusable(false);
        jToggleButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton2.setIconTextGap(0);
        jToggleButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButton2);

        jToggleButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jToggleButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/savena2.png"))); // NOI18N
        jToggleButton6.setText("Save");
        jToggleButton6.setToolTipText("Save");
        jToggleButton6.setFocusable(false);
        jToggleButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton6.setIconTextGap(0);
        jToggleButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButton6);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jSeparator1.setBackground(new java.awt.Color(204, 255, 204));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTabbedPane1.setBackground(new java.awt.Color(204, 255, 204));
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        jInternalFrame1.setBackground(new java.awt.Color(153, 153, 153));
        jInternalFrame1.setForeground(new java.awt.Color(255, 255, 255));
        jInternalFrame1.setToolTipText("Output Display Window");
        jInternalFrame1.setFrameIcon(null);
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Output", new javax.swing.ImageIcon(getClass().getResource("/jade/outputna.png")), jPanel2); // NOI18N

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        jInternalFrame2.setBackground(new java.awt.Color(204, 204, 204));
        jInternalFrame2.setToolTipText("Error Message Window");
        jInternalFrame2.setFrameIcon(null);
        jInternalFrame2.setVisible(true);

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 521, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );

        jTabbedPane1.addTab("Message", new javax.swing.ImageIcon(getClass().getResource("/jade/messagena.png")), jPanel4); // NOI18N

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Code.setBackground(new java.awt.Color(216, 252, 216));
        Code.setColumns(20);
        Code.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        Code.setRows(5);
        Code.setSelectionColor(new java.awt.Color(64, 164, 64));
        jScrollPane1.setViewportView(Code);

        jToggleButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/undona2.png"))); // NOI18N
        jToggleButton5.setToolTipText("Undo");
        jToggleButton5.setBorderPainted(false);
        jToggleButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/redona2.png"))); // NOI18N
        jToggleButton4.setToolTipText("Redo");
        jToggleButton4.setBorderPainted(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Coding Section", new javax.swing.ImageIcon(getClass().getResource("/jade/coding(sam).png")), jPanel5); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1)
                    .addComponent(jTabbedPane2)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));
        jMenuBar1.setForeground(new java.awt.Color(102, 102, 102));

        jMenu1.setText("File");

        New.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        New.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/Files-New-File-icon.png"))); // NOI18N
        New.setText("New File..");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });
        jMenu1.add(New);
        jMenu1.add(jSeparator2);

        Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        Open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/open-file-icon.png"))); // NOI18N
        Open.setText("Open File..");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        jMenu1.add(Open);
        jMenu1.add(jSeparator3);

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        jMenu1.add(Save);

        SaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        SaveAs.setText("Save as..");
        SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(SaveAs);
        jMenu1.add(jSeparator4);

        Print.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        Print.setText("Print..");
        jMenu1.add(Print);
        jMenu1.add(jSeparator5);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/Undo-icon.png"))); // NOI18N
        jMenuItem6.setText("Undo");
        jMenu2.add(jMenuItem6);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/Redo-icon.png"))); // NOI18N
        jMenuItem8.setText("Redo");
        jMenu2.add(jMenuItem8);
        jMenu2.add(jSeparator6);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/cut-icon (1).png"))); // NOI18N
        jMenuItem9.setText("Cut");
        jMenu2.add(jMenuItem9);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/copy-icon.png"))); // NOI18N
        jMenuItem10.setText("Copy");
        jMenu2.add(jMenuItem10);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/Paste-icon.png"))); // NOI18N
        jMenuItem11.setText("Paste");
        jMenu2.add(jMenuItem11);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Run");

        Run.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        Run.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade1/run-copy-icon.png"))); // NOI18N
        Run.setText("Run Project...");
        Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunActionPerformed(evt);
            }
        });
        jMenu3.add(Run);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem13.setText("Help Content");
        jMenu4.add(jMenuItem13);

        jMenuItem14.setText("Keyboard Shortcuts");
        jMenu4.add(jMenuItem14);
        jMenu4.add(jSeparator7);

        jMenuItem15.setText("About");
        jMenu4.add(jMenuItem15);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseDragged
         // TOD add your handling code here:
    }//GEN-LAST:event_jToggleButton1MouseDragged

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        chooser.setFileFilter(filter);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        try{

            FileReader reader = new FileReader(filename);
            BufferedReader br = new BufferedReader(reader);
            Code.read(br, null);
            br.close();
            Code.requestFocus();

        }
        catch(Exception e){

        }
        Name = f.getAbsolutePath();

    }//GEN-LAST:event_OpenActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        FileWriter writer;

        try {
            writer = new FileWriter(Name);
            try (BufferedWriter bw = new BufferedWriter(writer)) {
                Code.write(bw);
            }
            Code.requestFocus();}
        catch (IOException ex) {
            Logger.getLogger(design2_1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsActionPerformed
        // TODO add your handling code here:
        JFileChooser Saveas = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        Saveas.setFileFilter(filter);
        Saveas.setApproveButtonText("Save");

        int actionDialog = Saveas.showOpenDialog(this);
        if (actionDialog != JFileChooser.APPROVE_OPTION) {
            return;
        }

        File fileName = new File(Saveas.getSelectedFile() + ".txt");
        BufferedWriter outFile = null;
        try {
            outFile = new BufferedWriter(new FileWriter(fileName));

            Code.write(outFile);   // *** her

        } catch (IOException ex) {
            ex.printStackTrace();

        } finally {
            if (outFile != null) {
                try {
                    outFile.close();
                } catch (IOException e) {
                    // one of the few times that I think that it's OK
                    // to leave this blank

                }
            }
        }
        Name = fileName.getAbsolutePath();

    }//GEN-LAST:event_SaveAsActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunActionPerformed
        errorstr="";
        linenumber=0;
        if (Name.equals("")){
            JFileChooser Saveas = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
            Saveas.setFileFilter(filter);
            Saveas.setApproveButtonText("Save");

            int actionDialog = Saveas.showOpenDialog(this);
            if (actionDialog != JFileChooser.APPROVE_OPTION) {
                return;
            }
            else{
                File fileName = new File(Saveas.getSelectedFile() + ".txt");
                BufferedWriter outFile = null;
                try {
                    outFile = new BufferedWriter(new FileWriter(fileName));

                    Code.write(outFile);   // *** her

                } catch (IOException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, ex);
                } finally {
                    if (outFile != null) {
                        try {
                            outFile.close();
                        } catch (IOException e) {
                            // one of the few times that I think that it's OK
                            // to leave this blank
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                Name = fileName.getAbsolutePath();
            }}
            else{
                FileWriter writer;

                try {
                    writer = new FileWriter(Name);
                    try (BufferedWriter bw = new BufferedWriter(writer)) {
                        Code.write(bw);
                    }
                    Code.requestFocus();}
                catch (IOException ex) {
                    Logger.getLogger(design2_1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            File file = new File(Name);
            FileInputStream fstream;
            try {
                fstream = new FileInputStream(file);
                BufferedReader br = new BufferedReader(new InputStreamReader(fstream));

                int length;
                while ((strLine = br.readLine()) != null)   {

                    String print=strLine.substring(0,5);
                    String operate=strLine.substring(0,3);
                    String declare=strLine.substring(0, 7);
                    String scan=strLine.substring(0, 4);
                    String loop=strLine.substring(0,4);
                    if(print.equals("print")||print.equals("PRINT")){
                        print();
                    }
                    else if(operate.equals("ADD")||operate.equals("add")){
                        add();
                    }
                    else if(operate.equals("SUB")||operate.equals("sub")){
                        sub();
                    }
                    else if(operate.equals("MUL")||operate.equals("mul")){
                        mul();
                    }
                    else if(operate.equals("DIV")||operate.equals("div")){
                        div();
                    }
                    else if(declare.equals("declare")||declare.equals("DECLARE")){
                        declare();
                    }
                    else if(scan.equals("scan")){
                        scan();
                    }
                    else if(loop.equals("loop")){
                        loop();
                    }
                    else{
                        error++;
                        errorline.add(linenumber);
                        errorstr = errorstr+"\nNo such command exists! "+linenumber;
                    }
                    linenumber++;
                }
                if(error>0){
                    JOptionPane.showMessageDialog(null,"Build Error! "+errorstr,"Error",JOptionPane.ERROR_MESSAGE);

                }
                else{
                    if (output.equals("")){
                        JOptionPane.showMessageDialog(null,"Build Finish *no output to display*","Finish",JOptionPane.ERROR_MESSAGE);
                    }
                    else {
                        JOptionPane.showMessageDialog(null,output,"Finish",JOptionPane.INFORMATION_MESSAGE);}

                }
            }catch (FileNotFoundException  ex) {
                Logger.getLogger(design2_1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(design2_1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (StringIndexOutOfBoundsException ex) {
                error++;

            } catch (NullPointerException ex){
                error++;
                JOptionPane.showMessageDialog(null,"Error Compiling!");
            }

    }//GEN-LAST:event_RunActionPerformed
public void print(){
        String con;
                
                if(strLine.substring(6, 7).equals("(")){
                    con=strLine.substring(7, strLine.length()-1);
                    output=output+"\n"+con;
                }
                else{
                    String k = strLine.substring(6, strLine.length());
                    output=output+"\n"+variables.get(k);
                            
                }
    }int parameter;
    public void loop() throws FileNotFoundException, IOException{
        
        Scanner s2=new Scanner(strLine);
        while (s2.hasNext()){
            String cons = s2.next();
            parameter = Integer.parseInt(cons);}
            for(int i=0;i<parameter;i++){
                File file = new File(Name);
                FileInputStream fstream;
        
                fstream = new FileInputStream(file);
                BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
                while ((strLine = br.readLine()) != null)   {
                    if(strLine.equals("endloop")){
                        strLine=null;
                }
                else{
                    //String print=strLine.substring(0,5);
                    //print();
                    JOptionPane.showMessageDialog(null, "akshdkasj");
            }
        }
       
           
            
        
        }
    
        }
    
    public void scan(){
        Scanner s2=new Scanner(strLine);
        while (s2.hasNext()){
            String cons = s2.next();
            if(cons.equals("int")){
                String intvar = s2.next();
                String joption = JOptionPane.showInputDialog(null,"Please enter Integer: ");
                variables.put(intvar, Integer.parseInt(joption));
                JOptionPane.showMessageDialog(null,variables.get(intvar));
            }
            if(cons.equals("str")){
                String strvar = s2.next();
                String joption = JOptionPane.showInputDialog(null,"Please enter String: ");
                strvariable.put(strvar, joption);
                JOptionPane.showMessageDialog(null,strvariable.get(strvar));
            }
            
            if(cons.equals("float")){
                String floatvar = s2.next();
                String joption = JOptionPane.showInputDialog(null,"Please enter Floating Number: ");
                floatvariable.put(floatvar, Double.parseDouble(joption));
                JOptionPane.showMessageDialog(null,floatvariable.get(floatvar));
            }
        }
       
    }
    int tryParseInt(String value) { 
    try {  
       
     return Integer.parseInt(value);  
    } catch(NumberFormatException nfe) {  
      // Log exception.
      return 989898;
  } 
    }
     double tryParseFloat(String floatnum) { 
    try {  
     return Double.parseDouble(floatnum);  
    } catch(NumberFormatException nfe) {  
      
      return 989898.0;
  } 
    
    
}
   
    
    public void add(){
        Scanner s2=new Scanner(strLine);
        while (s2.hasNext()){
            String cons = s2.next();
            if(cons.equals("int")){
                
                
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                int first = tryParseInt(firstnum);
                int sec =tryParseInt(secnum);
               if(first == 989898&&sec!=989898)
               {
                   int total = variables.get(firstnum)+Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(sec == 989898&&first!=989898)
               {
                   int total = variables.get(secnum)+Integer.parseInt(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first!=989898 && sec!=989898){
                   int total = Integer.parseInt(firstnum)+Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first==989898 && sec==989898){
                   int total =variables.get(firstnum)+variables.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
              
 
            }
            if(cons.equals("float")){
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                double first = tryParseFloat(firstnum);
                double sec =tryParseFloat(secnum);
               if(first == 989898.0&&sec!=989898.0)
               {
                   double total = floatvariable.get(firstnum)+Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(sec == 989898.0&&first!=989898.0)
               {
                   double total = floatvariable.get(secnum)+Double.parseDouble(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first!=989898.0 && sec!=989898.0){
                   double total = Double.parseDouble(firstnum)+Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first==989898.0 && sec==989898.0){
                   double total =floatvariable.get(firstnum)+floatvariable.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
              
 
            }
        }
        
    }
    public void sub(){
        Scanner s2=new Scanner(strLine);
        while (s2.hasNext()){
            String cons = s2.next();
            if(cons.equals("int")){
                
                
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                int first = tryParseInt(firstnum);
                int sec =tryParseInt(secnum);
               if(first == 989898&&sec!=989898)
               {
                   int total = variables.get(firstnum)-Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(sec == 989898&&first!=989898)
               {
                   int total = variables.get(secnum)-Integer.parseInt(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first!=989898 && sec!=989898){
                   int total = Integer.parseInt(firstnum)-Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first==989898 && sec==989898){
                   int total =variables.get(firstnum)-variables.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
              
 
            }
            if(cons.equals("float")){
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                double first = tryParseFloat(firstnum);
                double sec =tryParseFloat(secnum);
               if(first == 989898.0&&sec!=989898.0)
               {
                   double total = floatvariable.get(firstnum)-Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(sec == 989898.0&&first!=989898.0)
               {
                   double total = floatvariable.get(secnum)-Double.parseDouble(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first!=989898.0 && sec!=989898.0){
                   double total = Double.parseDouble(firstnum)-Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first==989898.0 && sec==989898.0){
                   double total =floatvariable.get(firstnum)-floatvariable.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
              
 
            }
        }
        
    
    }
    public void mul(){
        Scanner s2=new Scanner(strLine);
        while (s2.hasNext()){
            String cons = s2.next();
            if(cons.equals("int")){
                
                
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                int first = tryParseInt(firstnum);
                int sec =tryParseInt(secnum);
               if(first == 989898&&sec!=989898)
               {
                   int total = variables.get(firstnum)*Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(sec == 989898&&first!=989898)
               {
                   int total = variables.get(secnum)*Integer.parseInt(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first!=989898 && sec!=989898){
                   int total = Integer.parseInt(firstnum)*Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first==989898 && sec==989898){
                   int total =variables.get(firstnum)*variables.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
              
 
            }
            if(cons.equals("float")){
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                double first = tryParseFloat(firstnum);
                double sec =tryParseFloat(secnum);
               if(first == 989898.0&&sec!=989898.0)
               {
                   double total = floatvariable.get(firstnum)*Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(sec == 989898.0&&first!=989898.0)
               {
                   double total = floatvariable.get(secnum)*Double.parseDouble(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first!=989898.0 && sec!=989898.0){
                   double total = Double.parseDouble(firstnum)*Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first==989898.0 && sec==989898.0){
                   double total =floatvariable.get(firstnum)*floatvariable.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
              
 
            }
        }
        
    }
    public void div(){
        Scanner s2=new Scanner(strLine);
        while (s2.hasNext()){
            String cons = s2.next();
            if(cons.equals("int")){
                
                
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                int first = tryParseInt(firstnum);
                int sec =tryParseInt(secnum);
               if(first == 989898&&sec!=989898)
               {
                   int total = variables.get(firstnum)/Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(sec == 989898&&first!=989898)
               {
                   int total = variables.get(secnum)/Integer.parseInt(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first!=989898 && sec!=989898){
                   int total = Integer.parseInt(firstnum)/Integer.parseInt(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
               if(first==989898 && sec==989898){
                   int total =variables.get(firstnum)/variables.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   variables.put(var, total);
               }
              
 
            }
            if(cons.equals("float")){
                String var = s2.next();
                String firstnum = s2.next();
                String secnum = s2.next();
                double first = tryParseFloat(firstnum);
                double sec =tryParseFloat(secnum);
               if(first == 989898.0&&sec!=989898.0)
               {
                   double total = floatvariable.get(firstnum)/Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(sec == 989898.0&&first!=989898.0)
               {
                   double total = floatvariable.get(secnum)/Double.parseDouble(firstnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first!=989898.0 && sec!=989898.0){
                   double total = Double.parseDouble(firstnum)/Double.parseDouble(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
               if(first==989898.0 && sec==989898.0){
                   double total =floatvariable.get(firstnum)/floatvariable.get(secnum);
                   JOptionPane.showMessageDialog(null,total);
                   floatvariable.put(var, total);
               }
              
 
            }
        }
        
    }
    public void declare(){
        Scanner s2=new Scanner(strLine);
         while (s2.hasNext()){
            String cons = s2.next();
            if(cons.equals("int")){
                String intvar = s2.next();
                String val = s2.next();
                if(variables.containsKey(intvar)||floatvariable.containsKey(intvar)||strvariable.containsKey(intvar)){
                    error++;
                    errorline.add(linenumber);
                    errorstr = errorstr+"\nVariable already declared! "+linenumber;
                    
                }else{
                variables.put(intvar, Integer.parseInt(val));
                }
                
            }
            else if(cons.equals("str")){
                String strvar = s2.next();
                String val = s2.next();
               if(variables.containsKey(strvar)||floatvariable.containsKey(strvar)||strvariable.containsKey(strvar)){
                    error++;
                    errorline.add(linenumber);
                    errorstr = errorstr+"\nVariable already declared! "+linenumber;
                    
                }else{
                variables.put(strvar, Integer.parseInt(val));
                }
            }
            
            else if(cons.equals("float")){
                String floatvar = s2.next();
                String val = s2.next();
                if(variables.containsKey(floatvar)||floatvariable.containsKey(floatvar)||strvariable.containsKey(floatvar)){
                    error++;
                    errorline.add(linenumber);
                    errorstr = errorstr+"\nVariable already declared! "+linenumber;
                    
                }else{
                variables.put(floatvar, Integer.parseInt(val));
                }
                
            }
            else{
                    error++;
                    errorline.add(linenumber);
                    errorstr = errorstr+"\n Wrong Declaration "+linenumber;
            }
        }
        
      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(design2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(design2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(design2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(design2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new design2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Code;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem New;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem Print;
    private javax.swing.JMenuItem Run;
    private javax.swing.JMenuItem Save;
    private javax.swing.JMenuItem SaveAs;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
